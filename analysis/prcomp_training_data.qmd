---
title: "Principal component analysis on training data"
author: "Julia Lober"
format: html
editor: visual
params:
  data_dir:
    label: Data Directory
    value: /Users/julialober/Documents/terrainworks/code/sandbox/data/
    input: text
  training_data:
    label: Training data .Rdata file
    value:  sample_umpqua.Rdata
    input: text
  points:
    label: Training data points
    value:  DeanCr/DeanCr_Initiation_Points.shp
    input: text
  dem:
    label: Training data dem
    value:  DeanCr/elev_deancr.flt
    input: text
---

```{r setup}
#| echo: false
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>",
  error = FALSE
)
```

```{r load, include = FALSE}
library(terra)
```

```{r}
#| echo: false
load(paste0(params$data_dir, params$training_data))
pnts <- vect(paste0(params$data_dir, params$points))
dem <- rast(paste0(params$data_dir, params$dem))
```

## Looking at the data:

Change the parameters in the .qmd document to use your own dataset for this markdown document. Right now, we are looking at the Dean Creek area of the Umpqua Basin. The covariates for model building are extracted from a LIDAR digital elevation model (DEM) using FORTRAN scripts. The points are from the DOGAMI landslide inventory.

```{r}
#| echo: false
plot(dem)
points(pnts)
```

## Training Data

A sampling strategy for selecting negative points gives us a data frame of training data with a random selection of non-landslide initiation points based on a buffer. There is a full description of the negative sampling strategy in a different document in this package.

There are 8 columns that represent the covariates used for building the model. Gradient and mean curvature are the two physical parameters chosen based on the condition needed for landslide initiation. There are also 4 partial contributing area calculations for storms of different duration (6hr, 12hr, 24hr, and 48hr).

```{r}
head(sample_pnts)
```

## Principal component analysis (PCA) 

I am using the built-in `prcomp()` function from the

```{r}
pc <- prcomp(sample_pnts[,2:7],
             center = TRUE,
             scale. = TRUE)
```

Lets look at the results of the analysis. We can graph the data on the axis of the first two principal components. These are linear combinations of the covariates that we provide that should explain variability in the data. Visually, we should see the data as separated as it gets. We can graph the landslide initiation points and negative points in different colors to see whether these principal components can point to differences between our two classes.

```{r}
#| echo: false
old_par <- par(xpd = TRUE, mar = c(2, 2, 2, 8))

p <- plot(pc$x[sample_pnts$class == "neg",], 
          pch = 20, 
          main = "Principal Components Analysis", 
          font.main = 2, 
          xlim = c(-6, 6), 
          ylim = c(-4, 4), 
          xlab = "Principal component 1",
          ylab = "Principal component 2")
points(pc$x[sample_pnts$class == "pos",], col = "red", pch = 20)

legend("topright", 
       inset = c(-.3, 0),
       legend = c("Negative points", "Landslide \ninitiation points"), 
       pch = 20, 
       col = c("black", "red"),
       bty= "n")

l.x <- cbind(pc$rotation[,1]) * 2
l.y <- cbind(pc$rotation[,2]) * 2

par(old_par)
```

We can look at the contributions of each covariate to each of the principal components. We see that the first principal component is a fairly equal combination of partial contributing areas and the second principal component is mostly contributed to by gradient.

```{r}
preset <- par(mfrow = c(1, 2))

barplot(pc$rotation[,1], main="PC 1 Loadings Plot", las=2,
        ylim = c(-1, 1))
barplot(pc$rotation[,2], main="PC 2 Loadings Plot", las=2,
        ylim = c(-1, 1))

par(preset)
# text(l.x, l.y, labels=rownames(l.x) , col="darkgreen", pos=c(3, 1, 3, 1), offset=1, cex=1.2)
# plot(arrows(x0=0, x1=l.x, y0=0, y1=l.y, col="darkgreen", length=0.15, lwd=3))
```
